plugins {
  id 'java'
  id 'org.springframework.boot' version '3.4.4'
  id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.camstudy'
version = '0.0.1-SNAPSHOT'

java {
  toolchain { languageVersion = JavaLanguageVersion.of(17) }
}

configurations {
  compileOnly { extendsFrom annotationProcessor }
}

repositories { mavenCentral() }

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-websocket'   // STOMP 채팅
  implementation 'org.springframework.boot:spring-boot-starter-actuator'   // /actuator/health,info
  implementation 'org.springframework.security:spring-security-crypto'     // Argon2PasswordEncoder

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'

  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'com.mysql:mysql-connector-j'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

  // (이미 쓰는 경우 유지) JWT
  implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

  // LiveKit 서버 SDK (토큰 발급용)
  implementation 'io.livekit:livekit-server:0.10.0'
}

tasks.named('test') { useJUnitPlatform() }

springBoot { buildInfo() } // /actuator/info
